name: Dev Commit (Random Times & Monthly Quota)

on:
  schedule:
    - cron: "30 2-17 * * *" # 8:00 - 23:00 Sri Lanka Time = UTC 2:30 - 17:30
  workflow_dispatch:

jobs:
  auto-dev:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install jq and curl
        run: sudo apt-get update && sudo apt-get install -y jq curl

      - name: Select instruction file (frontend/backend)
        id: pickfile
        run: |
          FILES=("ai_instructions.json" "ai_instructions_backend.json")
          SELECTED_FILE=${FILES[$RANDOM % ${#FILES[@]}]}
          echo "SELECTED_FILE=$SELECTED_FILE" >> $GITHUB_ENV

      - name: Read instructions
        id: read
        run: |
          RAW_JSON=$(cat $SELECTED_FILE)
          IS_ARRAY=$(echo "$RAW_JSON" | jq 'if type=="array" then 1 else 0 end')
          if [ "$IS_ARRAY" -eq 1 ]; then
            INSTRUCTIONS="$RAW_JSON"
          else
            INSTRUCTIONS=$(echo "$RAW_JSON" | jq -c '.steps')
          fi
          echo "INSTRUCTIONS=$INSTRUCTIONS" >> $GITHUB_ENV

      - name: Setup daily quota
        run: |
          TODAY=$(date +%Y-%m-%d)
          QUOTA_FILE=".monthly_commit_quota.json"

          TODAY_DATA=$(jq ".\"$TODAY\"" $QUOTA_FILE)
          if [ "$TODAY_DATA" == "null" ]; then
            TODAY_DATA='{"commits_done":0,"commits_today_quota":3}'
            jq ". + {\"$TODAY\": $TODAY_DATA}" $QUOTA_FILE > tmp.$$.json && mv tmp.$$.json $QUOTA_FILE
          fi

          QUOTA=$(echo $TODAY_DATA | jq .commits_today_quota)
          DONE=$(echo $TODAY_DATA | jq .commits_done)

          echo "QUOTA=$QUOTA" >> $GITHUB_ENV
          echo "DONE=$DONE" >> $GITHUB_ENV

      - name: Decide whether to commit this run
        id: randomcommit
        run: |
          if [ $DONE -ge $QUOTA ]; then
            echo "DO_COMMIT=false" >> $GITHUB_ENV
          else
            RANDOM_CHANCE=$((RANDOM % 100))
            if [ $RANDOM_CHANCE -lt 50 ]; then
              echo "DO_COMMIT=true" >> $GITHUB_ENV
            else
              echo "DO_COMMIT=false" >> $GITHUB_ENV
            fi
          fi

      - name: Run commit if selected
        if: env.DO_COMMIT == 'true'
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TODAY: ${{ env.TODAY }}
          INSTRUCTIONS: ${{ env.INSTRUCTIONS }}
        run: |
          COUNT=$(echo "$INSTRUCTIONS" | jq length)
          if [ "$COUNT" -eq 0 ]; then
            echo "No instructions to run. Exiting."
            exit 0
          fi

          INDEX=$((RANDOM % COUNT))
          STEP=$(echo "$INSTRUCTIONS" | jq -c .[$INDEX])

          # Detect frontend vs backend JSON structure
          FILE_PATH=$(echo "$STEP" | jq -r '.file // .output_files[0]')
          DESC=$(echo "$STEP" | jq -r '.instruction // .description')
          TITLE=$(echo "$STEP" | jq -r '.title // "Automated Commit"')

          RESPONSE=$(curl -s -X POST "https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${GEMINI_API_KEY}" \
            -H "Content-Type: application/json" \
            -d "{
              \"contents\": [{
                \"parts\": [{
                  \"text\": \"Write code for: $DESC. Output only valid code (React or Node.js depending on context). No explanations.\"
                }]
              }]
            }")

          CODE=$(echo "$RESPONSE" | jq -r '.candidates[0].content.parts[0].text')

          if [ -f "$FILE_PATH" ]; then
            echo "File exists. Updating: $FILE_PATH"
          else
            mkdir -p $(dirname "$FILE_PATH")
          fi
          echo "$CODE" > "$FILE_PATH"

          # Configure git
          git config user.name "Freelinx Dev"
          git config user.email "dev@freelinx.dev"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git

          # Commit generated code
          git add .
          git commit -m "$TITLE" -m "$DESC" || echo "No changes to commit"
          git push || echo "Push failed, possibly no changes"

          # Update commits_done in monthly quota
          jq ".\"$TODAY\".commits_done += 1" .monthly_commit_quota.json > tmp.$$.json && mv tmp.$$.json .monthly_commit_quota.json
          git add .monthly_commit_quota.json
          git commit -m "Update daily commit counter" || echo "No changes to commit"
          git push || echo "Push failed, possibly no changes"
